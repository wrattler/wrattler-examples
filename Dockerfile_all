FROM wrattler/wrattler_r_service_base:latest

## AI assistants

RUN wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb
RUN dpkg -i packages-microsoft-prod.deb
RUN apt-get install -y apt-transport-https; apt-get update; apt-get install -y dotnet-hosting-2.0.6
RUN apt-get install -y dotnet-sdk-2.1

RUN Rscript -e "install.packages(\"lpSolve\",repos=\"http://cran.us.r-project.org\")"
RUN Rscript -e "devtools::install_github(\"tpetricek/datadiff\") "

## TMP just try old branch for now
RUN git clone https://github.com/wrattler/wrattler; cd wrattler; git checkout data-wrangling-tutorial; cd -;


RUN dotnet restore /wrattler/aiassistants/server/
RUN dotnet build /wrattler/aiassistants/server/

## Python (for python service and datastore)

RUN apt-get update; apt-get install -y python3
RUN apt-get update; apt-get install -y python3-pip
RUN apt-get update; apt-get install -y locales
RUN apt-get update; apt-get install -y openssl
RUN apt-get update; apt-get install -y libssl-dev

# Set the locale
RUN sed -i -e 's/# en_GB.UTF-8 UTF-8/en_GB.UTF-8 UTF-8/' /etc/locale.gen && \
    locale-gen
ENV LANG en_GB.UTF-8
ENV LANGUAGE en_GB:en
ENV LC_ALL en_GB.UTF-8

RUN pip3 install --upgrade pip

RUN pip3 install wrattler-python-service==0.7
RUN pip3 install wrattler-data-store==0.5.1

## Client
RUN apt-get install -y curl
RUN curl -sL https://deb.nodesource.com/setup_12.x | bash -
RUN apt-get install -y nodejs
RUN curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
RUN apt-get update && apt-get install -y yarn
RUN cd wrattler/client; yarn; yarn build; cp build/wrattler-app.js public/; cd -
RUN npm install http-server -g

## Jupyterlab
RUN pip3 install jupyterlab
RUN yarn add typescript
RUN cd wrattler/jupyterlab_wrattler; yarn install; jupyter labextension link .; jupyter labextension install;  jlpm run build; cd -;


#WORKDIR /wrattler
#CMD ["./wrattler_start.sh"]

# copy current working directory
#ADD . /app
#WORKDIR /app



# expose the port and start running the Jug http server.
#EXPOSE 7103
#CMD ["Rscript", "app.R"]
CMD ["/bin/bash"]